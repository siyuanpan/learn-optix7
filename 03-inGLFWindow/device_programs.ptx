//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_52
.address_size 64

	// .globl	__closesthit__radiance
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.const .align 8 .b8 optixLaunchParams[24];
.global .align 1 .b8 $str[46] = {35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 10, 0};
.global .align 1 .b8 $str$1[72] = {72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 32, 102, 114, 111, 109, 32, 79, 112, 116, 105, 88, 32, 55, 32, 114, 97, 121, 103, 101, 110, 32, 112, 114, 111, 103, 114, 97, 109, 33, 10, 40, 119, 105, 116, 104, 105, 110, 32, 97, 32, 37, 105, 120, 37, 105, 45, 115, 105, 122, 101, 100, 32, 108, 97, 117, 110, 99, 104, 41, 10, 0};

.visible .entry __closesthit__radiance()
{



	ret;

}
	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance()
{



	ret;

}
	// .globl	__miss__radiance
.visible .entry __miss__radiance()
{



	ret;

}
	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame()
{
	.local .align 8 .b8 	__local_depot3[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<41>;
	.reg .b64 	%rd<12>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.const.u32 	%r1, [optixLaunchParams];
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB3_4;

	// begin inline asm
	call (%r2), _optix_get_launch_index_x, ();
	// end inline asm
	setp.ne.s32 	%p2, %r2, 0;
	@%p2 bra 	$L__BB3_4;

	// begin inline asm
	call (%r6), _optix_get_launch_index_y, ();
	// end inline asm
	setp.ne.s32 	%p3, %r6, 0;
	@%p3 bra 	$L__BB3_4;

	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r8, [retval0+0];
	} // callseq 0
	ld.const.v2.u32 	{%r9, %r10}, [optixLaunchParams+16];
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	st.local.v2.u32 	[%rd5], {%r9, %r10};
	mov.u64 	%rd6, $str$1;
	cvta.global.u64 	%rd7, %rd6;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r13, [retval0+0];
	} // callseq 1
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r14, [retval0+0];
	} // callseq 2

$L__BB3_4:
	// begin inline asm
	call (%r15), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r19), _optix_get_launch_index_y, ();
	// end inline asm
	add.s32 	%r21, %r15, %r1;
	shr.s32 	%r22, %r21, 31;
	shr.u32 	%r23, %r22, 24;
	add.s32 	%r24, %r21, %r23;
	and.b32  	%r25, %r24, 16776960;
	sub.s32 	%r26, %r21, %r25;
	add.s32 	%r27, %r19, %r1;
	shr.s32 	%r28, %r27, 31;
	shr.u32 	%r29, %r28, 24;
	add.s32 	%r30, %r27, %r29;
	and.b32  	%r31, %r30, 65280;
	sub.s32 	%r32, %r27, %r31;
	add.s32 	%r33, %r21, %r19;
	shl.b32 	%r34, %r32, 8;
	shl.b32 	%r35, %r33, 16;
	or.b32  	%r36, %r26, %r34;
	or.b32  	%r37, %r36, %r35;
	or.b32  	%r38, %r37, -16777216;
	ld.const.u32 	%r39, [optixLaunchParams+16];
	mad.lo.s32 	%r40, %r19, %r39, %r15;
	ld.const.u64 	%rd8, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd9, %rd8;
	mul.wide.u32 	%rd10, %r40, 4;
	add.s64 	%rd11, %rd9, %rd10;
	st.global.u32 	[%rd11], %r38;
	ret;

}

