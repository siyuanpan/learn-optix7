//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_52
.address_size 64

	// .globl	__closesthit__radiance
.const .align 8 .b8 optixLaunchParams[72];

.visible .entry __closesthit__radiance()
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<113>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<34>;


	// begin inline asm
	call (%rd7), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r10), _optix_read_primitive_idx, ();
	// end inline asm
	ld.u64 	%rd8, [%rd7+40];
	mul.wide.s32 	%rd9, %r10, 12;
	add.s64 	%rd10, %rd8, %rd9;
	ld.s32 	%rd3, [%rd10];
	ld.s32 	%rd4, [%rd10+4];
	ld.s32 	%rd5, [%rd10+8];
	// begin inline asm
	call (%f15, %f16), _optix_get_triangle_barycentrics, ();
	// end inline asm
	// begin inline asm
	call (%f17, %f18), _optix_get_triangle_barycentrics, ();
	// end inline asm
	ld.u64 	%rd2, [%rd7+24];
	setp.eq.s64 	%p1, %rd2, 0;
	@%p1 bra 	$L__BB0_2;

	mov.f32 	%f19, 0f3F800000;
	sub.f32 	%f20, %f19, %f15;
	sub.f32 	%f21, %f20, %f18;
	mul.lo.s64 	%rd11, %rd3, 12;
	add.s64 	%rd12, %rd2, %rd11;
	ld.f32 	%f22, [%rd12];
	ld.f32 	%f23, [%rd12+4];
	ld.f32 	%f24, [%rd12+8];
	mul.lo.s64 	%rd13, %rd4, 12;
	add.s64 	%rd14, %rd2, %rd13;
	ld.f32 	%f25, [%rd14];
	mul.f32 	%f26, %f15, %f25;
	ld.f32 	%f27, [%rd14+4];
	mul.f32 	%f28, %f15, %f27;
	ld.f32 	%f29, [%rd14+8];
	mul.f32 	%f30, %f15, %f29;
	fma.rn.f32 	%f31, %f21, %f22, %f26;
	fma.rn.f32 	%f32, %f21, %f23, %f28;
	fma.rn.f32 	%f33, %f21, %f24, %f30;
	mul.lo.s64 	%rd15, %rd5, 12;
	add.s64 	%rd16, %rd2, %rd15;
	ld.f32 	%f34, [%rd16];
	ld.f32 	%f35, [%rd16+4];
	ld.f32 	%f36, [%rd16+8];
	fma.rn.f32 	%f110, %f18, %f34, %f31;
	fma.rn.f32 	%f111, %f18, %f35, %f32;
	fma.rn.f32 	%f112, %f18, %f36, %f33;
	bra.uni 	$L__BB0_3;

$L__BB0_2:
	ld.u64 	%rd17, [%rd7+16];
	mul.lo.s64 	%rd18, %rd3, 12;
	add.s64 	%rd19, %rd17, %rd18;
	mul.lo.s64 	%rd20, %rd4, 12;
	add.s64 	%rd21, %rd17, %rd20;
	mul.lo.s64 	%rd22, %rd5, 12;
	add.s64 	%rd23, %rd17, %rd22;
	ld.f32 	%f37, [%rd19];
	ld.f32 	%f38, [%rd21];
	sub.f32 	%f39, %f38, %f37;
	ld.f32 	%f40, [%rd19+4];
	ld.f32 	%f41, [%rd21+4];
	sub.f32 	%f42, %f41, %f40;
	ld.f32 	%f43, [%rd19+8];
	ld.f32 	%f44, [%rd21+8];
	sub.f32 	%f45, %f44, %f43;
	ld.f32 	%f46, [%rd23];
	sub.f32 	%f47, %f46, %f37;
	ld.f32 	%f48, [%rd23+4];
	sub.f32 	%f49, %f48, %f40;
	ld.f32 	%f50, [%rd23+8];
	sub.f32 	%f51, %f50, %f43;
	mul.f32 	%f52, %f42, %f51;
	mul.f32 	%f53, %f45, %f49;
	sub.f32 	%f54, %f52, %f53;
	mul.f32 	%f55, %f45, %f47;
	mul.f32 	%f56, %f39, %f51;
	sub.f32 	%f57, %f55, %f56;
	mul.f32 	%f58, %f39, %f49;
	mul.f32 	%f59, %f42, %f47;
	sub.f32 	%f60, %f58, %f59;
	mul.f32 	%f61, %f57, %f57;
	fma.rn.f32 	%f62, %f54, %f54, %f61;
	fma.rn.f32 	%f63, %f60, %f60, %f62;
	sqrt.rn.f32 	%f64, %f63;
	rcp.rn.f32 	%f65, %f64;
	mul.f32 	%f110, %f65, %f54;
	mul.f32 	%f111, %f65, %f57;
	mul.f32 	%f112, %f60, %f65;

$L__BB0_3:
	mul.f32 	%f66, %f111, %f111;
	fma.rn.f32 	%f67, %f110, %f110, %f66;
	fma.rn.f32 	%f68, %f112, %f112, %f67;
	sqrt.rn.f32 	%f69, %f68;
	rcp.rn.f32 	%f70, %f69;
	mul.f32 	%f12, %f110, %f70;
	mul.f32 	%f13, %f111, %f70;
	mul.f32 	%f14, %f112, %f70;
	ld.u32 	%r15, [%rd7];
	ld.u32 	%r16, [%rd7+4];
	ld.u32 	%r17, [%rd7+8];
	ld.u8 	%rs1, [%rd7+48];
	setp.eq.s16 	%p2, %rs1, 0;
	@%p2 bra 	$L__BB0_6;

	ld.u64 	%rd6, [%rd7+32];
	setp.eq.s64 	%p3, %rd6, 0;
	@%p3 bra 	$L__BB0_6;

	mov.f32 	%f71, 0f3F800000;
	sub.f32 	%f72, %f71, %f15;
	sub.f32 	%f73, %f72, %f18;
	shl.b64 	%rd24, %rd3, 3;
	add.s64 	%rd25, %rd6, %rd24;
	ld.f32 	%f74, [%rd25];
	ld.f32 	%f75, [%rd25+4];
	shl.b64 	%rd26, %rd4, 3;
	add.s64 	%rd27, %rd6, %rd26;
	ld.f32 	%f76, [%rd27];
	mul.f32 	%f77, %f15, %f76;
	ld.f32 	%f78, [%rd27+4];
	mul.f32 	%f79, %f15, %f78;
	fma.rn.f32 	%f80, %f73, %f74, %f77;
	fma.rn.f32 	%f81, %f73, %f75, %f79;
	shl.b64 	%rd28, %rd5, 3;
	add.s64 	%rd29, %rd6, %rd28;
	ld.f32 	%f82, [%rd29];
	ld.f32 	%f83, [%rd29+4];
	fma.rn.f32 	%f84, %f18, %f82, %f80;
	fma.rn.f32 	%f85, %f18, %f83, %f81;
	ld.u64 	%rd30, [%rd7+56];
	tex.2d.v4.f32.f32 	{%f86, %f87, %f88, %f89}, [%rd30, {%f84, %f85}];
	mov.b32 	%f90, %r15;
	mul.f32 	%f91, %f86, %f90;
	mov.b32 	%r15, %f91;
	mov.b32 	%f92, %r16;
	mul.f32 	%f93, %f87, %f92;
	mov.b32 	%r16, %f93;
	mov.b32 	%f94, %r17;
	mul.f32 	%f95, %f88, %f94;
	mov.b32 	%r17, %f95;

$L__BB0_6:
	// begin inline asm
	call (%f96), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f97), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f98), _optix_get_world_ray_direction_z, ();
	// end inline asm
	mul.f32 	%f99, %f13, %f97;
	fma.rn.f32 	%f100, %f12, %f96, %f99;
	fma.rn.f32 	%f101, %f14, %f98, %f100;
	abs.f32 	%f102, %f101;
	fma.rn.f32 	%f103, %f102, 0f3F4CCCCD, 0f3E4CCCCD;
	mov.u32 	%r12, 0;
	// begin inline asm
	call (%r11), _optix_get_payload, (%r12);
	// end inline asm
	mov.u32 	%r14, 1;
	// begin inline asm
	call (%r13), _optix_get_payload, (%r14);
	// end inline asm
	cvt.u64.u32 	%rd31, %r11;
	cvt.u64.u32 	%rd32, %r13;
	bfi.b64 	%rd33, %rd31, %rd32, 32, 32;
	mov.b32 	%f104, %r15;
	mul.f32 	%f105, %f103, %f104;
	mov.b32 	%f106, %r16;
	mul.f32 	%f107, %f103, %f106;
	mov.b32 	%f108, %r17;
	mul.f32 	%f109, %f103, %f108;
	st.f32 	[%rd33], %f105;
	st.f32 	[%rd33+4], %f107;
	st.f32 	[%rd33+8], %f109;
	ret;

}
	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance()
{



	ret;

}
	// .globl	__miss__radiance
.visible .entry __miss__radiance()
{
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r2, 0;
	// begin inline asm
	call (%r1), _optix_get_payload, (%r2);
	// end inline asm
	mov.u32 	%r4, 1;
	// begin inline asm
	call (%r3), _optix_get_payload, (%r4);
	// end inline asm
	cvt.u64.u32 	%rd1, %r1;
	cvt.u64.u32 	%rd2, %r3;
	bfi.b64 	%rd3, %rd1, %rd2, 32, 32;
	mov.u32 	%r5, 1065353216;
	st.u32 	[%rd3], %r5;
	st.u32 	[%rd3+4], %r5;
	st.u32 	[%rd3+8], %r5;
	ret;

}
	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame()
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<120>;
	.reg .b64 	%rd<10>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd2, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	// begin inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// end inline asm
	// begin inline asm
	call (%r5), _optix_get_launch_index_y, ();
	// end inline asm
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r44, 0;
	st.local.u32 	[%rd3], %r44;
	st.local.u32 	[%rd3+4], %r44;
	st.local.u32 	[%rd3+8], %r44;
	shr.u64 	%rd4, %rd2, 32;
	cvt.u32.u64 	%r46, %rd4;
	cvt.u32.u64 	%r47, %rd2;
	cvt.rn.f32.s32 	%f10, %r1;
	add.f32 	%f11, %f10, 0f3F000000;
	cvt.rn.f32.s32 	%f12, %r5;
	add.f32 	%f13, %f12, 0f3F000000;
	ld.const.v2.f32 	{%f14, %f15}, [optixLaunchParams+8];
	mov.b32 	%r78, %f14;
	mov.u32 	%r43, 1;
	div.rn.f32 	%f18, %f11, %f14;
	div.rn.f32 	%f19, %f13, %f15;
	add.f32 	%f20, %f18, 0fBF000000;
	ld.const.v2.f32 	{%f21, %f22}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f25, %f26}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f29, %f30}, [optixLaunchParams+24];
	fma.rn.f32 	%f32, %f21, %f20, %f30;
	ld.const.v2.f32 	{%f33, %f34}, [optixLaunchParams+32];
	fma.rn.f32 	%f37, %f22, %f20, %f33;
	fma.rn.f32 	%f38, %f25, %f20, %f34;
	add.f32 	%f39, %f19, 0fBF000000;
	ld.const.v2.f32 	{%f40, %f41}, [optixLaunchParams+56];
	fma.rn.f32 	%f44, %f39, %f26, %f32;
	fma.rn.f32 	%f45, %f39, %f40, %f37;
	fma.rn.f32 	%f46, %f39, %f41, %f38;
	mul.f32 	%f47, %f45, %f45;
	fma.rn.f32 	%f48, %f44, %f44, %f47;
	fma.rn.f32 	%f49, %f46, %f46, %f48;
	sqrt.rn.f32 	%f50, %f49;
	rcp.rn.f32 	%f51, %f50;
	mul.f32 	%f4, %f44, %f51;
	mul.f32 	%f5, %f45, %f51;
	mul.f32 	%f6, %f46, %f51;
	ld.const.v2.f32 	{%f52, %f53}, [optixLaunchParams+16];
	ld.const.u64 	%rd1, [optixLaunchParams+64];
	mov.f32 	%f8, 0f60AD78EC;
	mov.u32 	%r40, 255;
	mov.u32 	%r45, 2;
	// begin inline asm
	call(%r7,%r8,%r9,%r10,%r11,%r12,%r13,%r14,%r15,%r16,%r17,%r18,%r19,%r20,%r21,%r22,%r23,%r24,%r25,%r26,%r27,%r28,%r29,%r30,%r31,%r32,%r33,%r34,%r35,%r36,%r37,%r38),_optix_trace_typed_32,(%r44,%rd1,%f52,%f53,%f29,%f4,%f5,%f6,%f9,%f8,%f9,%r40,%r43,%r44,%r43,%r44,%r45,%r46,%r47,%r79,%r80,%r81,%r82,%r83,%r84,%r85,%r86,%r87,%r88,%r89,%r90,%r91,%r92,%r93,%r94,%r95,%r96,%r97,%r98,%r99,%r100,%r101,%r102,%r103,%r104,%r105,%r106,%r107,%r108);
	// end inline asm
	ld.local.f32 	%f54, [%rd3];
	mul.f32 	%f55, %f54, 0f437FFD71;
	cvt.rzi.s32.f32 	%r109, %f55;
	ld.local.f32 	%f56, [%rd3+4];
	mul.f32 	%f57, %f56, 0f437FFD71;
	cvt.rzi.s32.f32 	%r110, %f57;
	ld.local.f32 	%f58, [%rd3+8];
	mul.f32 	%f59, %f58, 0f437FFD71;
	cvt.rzi.s32.f32 	%r111, %f59;
	shl.b32 	%r112, %r110, 8;
	shl.b32 	%r113, %r111, 16;
	or.b32  	%r114, %r109, %r112;
	or.b32  	%r115, %r114, %r113;
	or.b32  	%r116, %r115, -16777216;
	mov.b64 	%rd5, {%r78, %r117};
	cvt.u32.u64 	%r118, %rd5;
	mov.b32 	%f60, %r118;
	fma.rn.f32 	%f61, %f60, %f12, %f10;
	cvt.rzi.u32.f32 	%r119, %f61;
	ld.const.u64 	%rd6, [optixLaunchParams];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r119, 4;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %r116;
	ret;

}

